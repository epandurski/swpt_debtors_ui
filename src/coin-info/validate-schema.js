"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"definitions":{"ResourceReference":{"type":"object","properties":{"uri":{"type":"string"}},"required":["uri"]},"DebtorIdentity":{"type":"object","properties":{"type":{"type":"string","pattern":"^DebtorIdentity$"},"uri":{"type":"string","maxLength":100}},"required":["type","uri"]},"CoinPeg":{"type":"object","properties":{"type":{"type":"string","pattern":"^CoinPeg$"},"exchangeRate":{"type":"number","minimum":0},"debtorIdentity":{"$ref":"#/definitions/DebtorIdentity"},"latestCoinInfo":{"$ref":"#/definitions/ResourceReference"}},"required":["type","exchangeRate","debtorIdentity","latestCoinInfo"]}},"type":"object","properties":{"type":{"type":"string","pattern":"^CoinInfo$"},"uri":{"type":"string","minLength":1,"maxLength":200},"revision":{"type":"integer","minimum":0,"maximum":4294967295},"validUntil":{"type":"string"},"latestCoinInfo":{"$ref":"#/definitions/ResourceReference"},"debtorIdentity":{"$ref":"#/definitions/DebtorIdentity"},"debtorName":{"type":"string","minLength":1,"maxLength":40},"debtorHomepage":{"$ref":"#/definitions/ResourceReference"},"amountDevisor":{"type":"number","minimum":0},"decimalPlaces":{"type":"integer","minimum":-20,"maximum":20},"unit":{"type":"string","minLength":1,"maxLength":40},"peg":{"$ref":"#/definitions/CoinPeg"}},"required":["type","uri","revision","latestCoinInfo","debtorIdentity","debtorName","amountDevisor","decimalPlaces","unit"],"additionalProperties":true};const schema23 = {"type":"object","properties":{"uri":{"type":"string"}},"required":["uri"]};const schema24 = {"type":"object","properties":{"type":{"type":"string","pattern":"^DebtorIdentity$"},"uri":{"type":"string","maxLength":100}},"required":["type","uri"]};const pattern0 = new RegExp("^CoinInfo$", "u");const pattern1 = new RegExp("^DebtorIdentity$", "u");const func8 = require("./ucs2length.js").default;const schema26 = {"type":"object","properties":{"type":{"type":"string","pattern":"^CoinPeg$"},"exchangeRate":{"type":"number","minimum":0},"debtorIdentity":{"$ref":"#/definitions/DebtorIdentity"},"latestCoinInfo":{"$ref":"#/definitions/ResourceReference"}},"required":["type","exchangeRate","debtorIdentity","latestCoinInfo"]};const pattern2 = new RegExp("^CoinPeg$", "u");function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.type === undefined) && (missing0 = "type")) || ((data.exchangeRate === undefined) && (missing0 = "exchangeRate"))) || ((data.debtorIdentity === undefined) && (missing0 = "debtorIdentity"))) || ((data.latestCoinInfo === undefined) && (missing0 = "latestCoinInfo"))){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){let data0 = data.type;const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(!pattern2.test(data0)){validate21.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/pattern",keyword:"pattern",params:{pattern: "^CoinPeg$"},message:"must match pattern \""+"^CoinPeg$"+"\""}];return false;}}else {validate21.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.exchangeRate !== undefined){let data1 = data.exchangeRate;const _errs3 = errors;if(errors === _errs3){if((typeof data1 == "number") && (isFinite(data1))){if(data1 < 0 || isNaN(data1)){validate21.errors = [{instancePath:instancePath+"/exchangeRate",schemaPath:"#/properties/exchangeRate/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate21.errors = [{instancePath:instancePath+"/exchangeRate",schemaPath:"#/properties/exchangeRate/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorIdentity !== undefined){let data2 = data.debtorIdentity;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.type === undefined) && (missing1 = "type")) || ((data2.uri === undefined) && (missing1 = "uri"))){validate21.errors = [{instancePath:instancePath+"/debtorIdentity",schemaPath:"#/definitions/DebtorIdentity/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data2.type !== undefined){let data3 = data2.type;const _errs8 = errors;if(errors === _errs8){if(typeof data3 === "string"){if(!pattern1.test(data3)){validate21.errors = [{instancePath:instancePath+"/debtorIdentity/type",schemaPath:"#/definitions/DebtorIdentity/properties/type/pattern",keyword:"pattern",params:{pattern: "^DebtorIdentity$"},message:"must match pattern \""+"^DebtorIdentity$"+"\""}];return false;}}else {validate21.errors = [{instancePath:instancePath+"/debtorIdentity/type",schemaPath:"#/definitions/DebtorIdentity/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data2.uri !== undefined){let data4 = data2.uri;const _errs10 = errors;if(errors === _errs10){if(typeof data4 === "string"){if(func8(data4) > 100){validate21.errors = [{instancePath:instancePath+"/debtorIdentity/uri",schemaPath:"#/definitions/DebtorIdentity/properties/uri/maxLength",keyword:"maxLength",params:{limit: 100},message:"must NOT have more than 100 characters"}];return false;}}else {validate21.errors = [{instancePath:instancePath+"/debtorIdentity/uri",schemaPath:"#/definitions/DebtorIdentity/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}else {validate21.errors = [{instancePath:instancePath+"/debtorIdentity",schemaPath:"#/definitions/DebtorIdentity/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.latestCoinInfo !== undefined){let data5 = data.latestCoinInfo;const _errs12 = errors;const _errs13 = errors;if(errors === _errs13){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing2;if((data5.uri === undefined) && (missing2 = "uri")){validate21.errors = [{instancePath:instancePath+"/latestCoinInfo",schemaPath:"#/definitions/ResourceReference/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data5.uri !== undefined){if(typeof data5.uri !== "string"){validate21.errors = [{instancePath:instancePath+"/latestCoinInfo/uri",schemaPath:"#/definitions/ResourceReference/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate21.errors = [{instancePath:instancePath+"/latestCoinInfo",schemaPath:"#/definitions/ResourceReference/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((((((data.type === undefined) && (missing0 = "type")) || ((data.uri === undefined) && (missing0 = "uri"))) || ((data.revision === undefined) && (missing0 = "revision"))) || ((data.latestCoinInfo === undefined) && (missing0 = "latestCoinInfo"))) || ((data.debtorIdentity === undefined) && (missing0 = "debtorIdentity"))) || ((data.debtorName === undefined) && (missing0 = "debtorName"))) || ((data.amountDevisor === undefined) && (missing0 = "amountDevisor"))) || ((data.decimalPlaces === undefined) && (missing0 = "decimalPlaces"))) || ((data.unit === undefined) && (missing0 = "unit"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){let data0 = data.type;const _errs2 = errors;if(errors === _errs2){if(typeof data0 === "string"){if(!pattern0.test(data0)){validate20.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/pattern",keyword:"pattern",params:{pattern: "^CoinInfo$"},message:"must match pattern \""+"^CoinInfo$"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.uri !== undefined){let data1 = data.uri;const _errs4 = errors;if(errors === _errs4){if(typeof data1 === "string"){if(func8(data1) > 200){validate20.errors = [{instancePath:instancePath+"/uri",schemaPath:"#/properties/uri/maxLength",keyword:"maxLength",params:{limit: 200},message:"must NOT have more than 200 characters"}];return false;}else {if(func8(data1) < 1){validate20.errors = [{instancePath:instancePath+"/uri",schemaPath:"#/properties/uri/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate20.errors = [{instancePath:instancePath+"/uri",schemaPath:"#/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.revision !== undefined){let data2 = data.revision;const _errs6 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate20.errors = [{instancePath:instancePath+"/revision",schemaPath:"#/properties/revision/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs6){if((typeof data2 == "number") && (isFinite(data2))){if(data2 > 4294967295 || isNaN(data2)){validate20.errors = [{instancePath:instancePath+"/revision",schemaPath:"#/properties/revision/maximum",keyword:"maximum",params:{comparison: "<=", limit: 4294967295},message:"must be <= 4294967295"}];return false;}else {if(data2 < 0 || isNaN(data2)){validate20.errors = [{instancePath:instancePath+"/revision",schemaPath:"#/properties/revision/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.validUntil !== undefined){const _errs8 = errors;if(typeof data.validUntil !== "string"){validate20.errors = [{instancePath:instancePath+"/validUntil",schemaPath:"#/properties/validUntil/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.latestCoinInfo !== undefined){let data4 = data.latestCoinInfo;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing1;if((data4.uri === undefined) && (missing1 = "uri")){validate20.errors = [{instancePath:instancePath+"/latestCoinInfo",schemaPath:"#/definitions/ResourceReference/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data4.uri !== undefined){if(typeof data4.uri !== "string"){validate20.errors = [{instancePath:instancePath+"/latestCoinInfo/uri",schemaPath:"#/definitions/ResourceReference/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate20.errors = [{instancePath:instancePath+"/latestCoinInfo",schemaPath:"#/definitions/ResourceReference/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorIdentity !== undefined){let data6 = data.debtorIdentity;const _errs15 = errors;const _errs16 = errors;if(errors === _errs16){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){let missing2;if(((data6.type === undefined) && (missing2 = "type")) || ((data6.uri === undefined) && (missing2 = "uri"))){validate20.errors = [{instancePath:instancePath+"/debtorIdentity",schemaPath:"#/definitions/DebtorIdentity/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data6.type !== undefined){let data7 = data6.type;const _errs18 = errors;if(errors === _errs18){if(typeof data7 === "string"){if(!pattern1.test(data7)){validate20.errors = [{instancePath:instancePath+"/debtorIdentity/type",schemaPath:"#/definitions/DebtorIdentity/properties/type/pattern",keyword:"pattern",params:{pattern: "^DebtorIdentity$"},message:"must match pattern \""+"^DebtorIdentity$"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/debtorIdentity/type",schemaPath:"#/definitions/DebtorIdentity/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data6.uri !== undefined){let data8 = data6.uri;const _errs20 = errors;if(errors === _errs20){if(typeof data8 === "string"){if(func8(data8) > 100){validate20.errors = [{instancePath:instancePath+"/debtorIdentity/uri",schemaPath:"#/definitions/DebtorIdentity/properties/uri/maxLength",keyword:"maxLength",params:{limit: 100},message:"must NOT have more than 100 characters"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/debtorIdentity/uri",schemaPath:"#/definitions/DebtorIdentity/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs20 === errors;}else {var valid4 = true;}}}}else {validate20.errors = [{instancePath:instancePath+"/debtorIdentity",schemaPath:"#/definitions/DebtorIdentity/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorName !== undefined){let data9 = data.debtorName;const _errs22 = errors;if(errors === _errs22){if(typeof data9 === "string"){if(func8(data9) > 40){validate20.errors = [{instancePath:instancePath+"/debtorName",schemaPath:"#/properties/debtorName/maxLength",keyword:"maxLength",params:{limit: 40},message:"must NOT have more than 40 characters"}];return false;}else {if(func8(data9) < 1){validate20.errors = [{instancePath:instancePath+"/debtorName",schemaPath:"#/properties/debtorName/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate20.errors = [{instancePath:instancePath+"/debtorName",schemaPath:"#/properties/debtorName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.debtorHomepage !== undefined){let data10 = data.debtorHomepage;const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){let missing3;if((data10.uri === undefined) && (missing3 = "uri")){validate20.errors = [{instancePath:instancePath+"/debtorHomepage",schemaPath:"#/definitions/ResourceReference/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data10.uri !== undefined){if(typeof data10.uri !== "string"){validate20.errors = [{instancePath:instancePath+"/debtorHomepage/uri",schemaPath:"#/definitions/ResourceReference/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate20.errors = [{instancePath:instancePath+"/debtorHomepage",schemaPath:"#/definitions/ResourceReference/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.amountDevisor !== undefined){let data12 = data.amountDevisor;const _errs29 = errors;if(errors === _errs29){if((typeof data12 == "number") && (isFinite(data12))){if(data12 < 0 || isNaN(data12)){validate20.errors = [{instancePath:instancePath+"/amountDevisor",schemaPath:"#/properties/amountDevisor/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/amountDevisor",schemaPath:"#/properties/amountDevisor/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.decimalPlaces !== undefined){let data13 = data.decimalPlaces;const _errs31 = errors;if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){validate20.errors = [{instancePath:instancePath+"/decimalPlaces",schemaPath:"#/properties/decimalPlaces/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs31){if((typeof data13 == "number") && (isFinite(data13))){if(data13 > 20 || isNaN(data13)){validate20.errors = [{instancePath:instancePath+"/decimalPlaces",schemaPath:"#/properties/decimalPlaces/maximum",keyword:"maximum",params:{comparison: "<=", limit: 20},message:"must be <= 20"}];return false;}else {if(data13 < -20 || isNaN(data13)){validate20.errors = [{instancePath:instancePath+"/decimalPlaces",schemaPath:"#/properties/decimalPlaces/minimum",keyword:"minimum",params:{comparison: ">=", limit: -20},message:"must be >= -20"}];return false;}}}}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.unit !== undefined){let data14 = data.unit;const _errs33 = errors;if(errors === _errs33){if(typeof data14 === "string"){if(func8(data14) > 40){validate20.errors = [{instancePath:instancePath+"/unit",schemaPath:"#/properties/unit/maxLength",keyword:"maxLength",params:{limit: 40},message:"must NOT have more than 40 characters"}];return false;}else {if(func8(data14) < 1){validate20.errors = [{instancePath:instancePath+"/unit",schemaPath:"#/properties/unit/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate20.errors = [{instancePath:instancePath+"/unit",schemaPath:"#/properties/unit/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs33 === errors;}else {var valid0 = true;}if(valid0){if(data.peg !== undefined){const _errs35 = errors;if(!(validate21(data.peg, {instancePath:instancePath+"/peg",parentData:data,parentDataProperty:"peg",rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid0 = _errs35 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}